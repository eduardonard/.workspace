#!/usr/bin/env python3

import subprocess

def get_volume():
    """Get the current volume level using pactl."""
    try:
        # Get the current volume using pactl
        result = subprocess.run(
            ['pactl', 'get-sink-volume', '@DEFAULT_SINK@'],
            capture_output=True, text=True, check=True
        )
        # Parse the output to extract the volume percentage
        volume_str = result.stdout.split()[4].replace('%', '')
        volume = int(volume_str)
        return volume
    except subprocess.CalledProcessError:
        return None

def set_volume(volume):
    """Set the volume using pactl."""
    try:
        subprocess.run(['pactl', 'set-sink-volume', '@DEFAULT_SINK@', f'{volume}%'], check=True)
    except subprocess.CalledProcessError:
        pass

def volume_emoji(volume):
    """Return the appropriate emoji based on the volume level."""
    if volume == 0:
        return 'ðŸ”‡'  # Muted
    elif volume <= 20:
        return 'ðŸ”ˆ'  # Low volume
    elif volume <= 50:
        return 'ðŸ”‰'  # Medium volume
    elif volume <= 80:
        return 'ðŸ”Š'  # High volume
    else:
        return 'ðŸŽ§'  # Maximum volume

def main():
    # Get the current volume
    volume = get_volume()
    
    if volume is None:
        print("Error retrieving volume")
        return
    
    # Display the volume emoji
    emoji = volume_emoji(volume)
    
    # Print the emoji and volume for i3blocks
    print(f"{emoji} {volume}%")

if __name__ == "__main__":
    main()
