#!/usr/bin/env python3

def get_memory_usage():
    # Read memory information from /proc/meminfo
    with open("/proc/meminfo", "r") as f:
        lines = f.readlines()

    mem_info = {}
    for line in lines:
        key, value = line.split(':')
        mem_info[key.strip()] = int(value.strip().split()[0])  # Value in kB

    # Calculate total and used memory
    total_memory = mem_info.get("MemTotal", 0)
    free_memory = mem_info.get("MemFree", 0)
    buffers = mem_info.get("Buffers", 0)
    cached = mem_info.get("Cached", 0)

    used_memory = total_memory - free_memory - buffers - cached
    used_percentage = (used_memory / total_memory) * 100

    return used_percentage

def main():
    disk_usage = get_memory_usage()

    # Determine color based on disk usage
    if disk_usage < 50:
        color = "#ffffff"  # Green for low usage
    elif disk_usage < 80:
        color = "#FFFF00"  # Yellow for moderate usage
    else:
        color = "#FF0000"  # Red for high usage

    # Display the disk usage in i3blocks format
    print(f"ðŸ’½ {int(disk_usage)}%")  # Short output for i3blocks
    print(f"Disk Usage: {disk_usage:.1f}%")  # Full output for tooltip
    print(color)  # Color coding

if __name__ == "__main__":
    main()
